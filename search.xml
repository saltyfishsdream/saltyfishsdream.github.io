<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【转载】基于人脸识别的疲劳驾驶检测系统]]></title>
    <url>%2F2018%2F06%2F05%2F%E5%9F%BA%E4%BA%8E%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%9A%84%E7%96%B2%E5%8A%B3%E9%A9%BE%E9%A9%B6%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[功能通过识别驾驶员的面部信息来判断驾驶员是否疲劳驾驶 实现思路 通过摄像头得到驾驶员驾驶的实时视频 找出每一帧图片中驾驶员的面部 找出驾驶员面部眼睛的位置 计算出眼睛的长度和宽度，并计算出长宽比例 当长宽比接近与0，即驾驶员闭眼。当驾驶员连续多帧闭眼，即判断疲劳驾驶 图像识别函数功能说明我们在得到图片中的脸部图向后要我们要找到眼睛的坐标位置，这里我们使用dilb为我们提供的函数将脸部转化为68个特征点，如下图所示。其中眼睛由6个点表示，通过计算坐标点的欧几里得距离，我们就可以获得长度和宽度了，最后就可以求出比值 代码实现注1：代码所运行的环境是ubuntu16.04，python版本是3.5 注2：以下是引用的python包，可用pip install安装 12345678910111213from scipy.spatial import distance as distfrom imutils.video import VideoStreamfrom imutils.video import FileVideoStreamfrom imutils import face_utilsfrom threading import Threadimport numpy as npimport playsoundimport argparseimport imutilsimport timeimport dlibimport cv2import os 打开电脑摄像头，并循环读取每一帧图片 12vs = VideoStream(src=0).start()#打开摄像头frame = vs.read()#读出一帧图片，将图片按下述步骤处理得到长宽比，然后不停循环 找出每一帧图片中的人脸 12gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)#灰度化rects = dlib.get_frontal_face_detector(gray, 0)#通过dectetor自带的函数得到图片脸部 将每一张人脸特征点化，并将特征点转换为numpy矩阵，求得眼睛的坐标索引 123predictor = dlib.shape_predictor('test.dat')#这是设置提取脸部特征点的函数，test.dat是官方提供的训练好的模型shape = predictor(gray, rect)#将脸部特征点化shape = face_utils.shape_to_np(shape)#将特征点转化为numpy矩阵 得到特征点中眼部的索引，并从矩阵中提取出来，作为下述计算长宽比函数的参数 1234(lStart, lEnd) = face_utils.FACIAL_LANDMARKS_IDXS["left_eye"]#获得左眼的索引(rStart, rEnd) = face_utils.FACIAL_LANDMARKS_IDXS["right_eye"]#获得右眼的索引leftEye = shape[lStart:lEnd]rightEye = shape[rStart:rEnd] 求出眼睛长宽比。先定义求值函数，再将3中得到的leftEye和rightEye作为参数传入 123456789def eyeAspectRatio(eye):#计算两眼的长度和宽度，并算出长宽比 length_A = dist.euclidean(eye[1], eye[5]) length_B = dist.euclidean(eye[2], eye[4]) length_C = dist.euclidean(eye[0], eye[3]) ratio = (length_A+length_B)/(2.0*length_C) return ratio 比较长宽比，如果长宽比小于阈值，则计数+1，当计数值大于一个数时。则表示疲劳显示出警告 123456if ear &lt; EYE_AR_THRESH: COUNTER += 1else: if COUNTER &gt;= EYE_AR_CONSEC_FRAMES: print("疲劳!!!!!"); COUNTER = 0 参考：https://www.pyimagesearch.com/2017/05/08/drowsiness-detection-opencv/ 转载自：https://www.xsegment.cn/2018/05/31/%E5%9F%BA%E4%BA%8E%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%9A%84%E7%96%B2%E5%8A%B3%E9%A9%BE%E9%A9%B6%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F/]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>-OpenCV -机器学习 -Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[my first article]]></title>
    <url>%2F2018%2F06%2F03%2Fmy-first-article%2F</url>
    <content type="text"><![CDATA[这是一个尝试]]></content>
      <categories>
        <category>try</category>
      </categories>
      <tags>
        <tag>emmmmm</tag>
      </tags>
  </entry>
</search>
