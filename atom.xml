<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>咸鱼一梦</title>
  
  <subtitle>咸鱼的博客，咸鱼的梦</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-06T03:06:34.344Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>saltyfish</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【转载】基于人脸识别的疲劳驾驶检测系统</title>
    <link href="http://yoursite.com/2018/06/05/%E5%9F%BA%E4%BA%8E%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%9A%84%E7%96%B2%E5%8A%B3%E9%A9%BE%E9%A9%B6%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2018/06/05/基于人脸识别的疲劳驾驶检测系统/</id>
    <published>2018-06-05T10:06:31.000Z</published>
    <updated>2018-06-06T03:06:34.344Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>通过识别驾驶员的面部信息来判断驾驶员是否疲劳驾驶</p><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><ul><li>通过摄像头得到驾驶员驾驶的实时视频</li><li>找出每一帧图片中驾驶员的面部</li><li>找出驾驶员面部眼睛的位置</li><li>计算出眼睛的长度和宽度，并计算出长宽比例</li><li>当长宽比接近与0，即驾驶员闭眼。当驾驶员连续多帧闭眼，即判断疲劳驾驶</li></ul><h2 id="图像识别函数功能说明"><a href="#图像识别函数功能说明" class="headerlink" title="图像识别函数功能说明"></a>图像识别函数功能说明</h2><p>我们在得到图片中的脸部图向后要我们要找到眼睛的坐标位置，这里我们使用dilb为我们提供的函数将脸部转化为68个特征点，如下图所示。其中眼睛由6个点表示，通过计算坐标点的欧几里得距离，我们就可以获得长度和宽度了，最后就可以求出比值</p><p><img src="基于人脸识别的疲劳驾驶检测系统/1.png" alt="人脸特征点图"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>注1：代码所运行的环境是ubuntu16.04，python版本是3.5</p><p>注2：以下是引用的python包，可用<code>pip install</code>安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> distance <span class="keyword">as</span> dist</span><br><span class="line"><span class="keyword">from</span> imutils.video <span class="keyword">import</span> VideoStream</span><br><span class="line"><span class="keyword">from</span> imutils.video <span class="keyword">import</span> FileVideoStream</span><br><span class="line"><span class="keyword">from</span> imutils <span class="keyword">import</span> face_utils</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> playsound</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> imutils</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> dlib</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><ol><li>打开电脑摄像头，并循环读取每一帧图片</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vs = VideoStream(src=<span class="number">0</span>).start()<span class="comment">#打开摄像头</span></span><br><span class="line">frame = vs.read()<span class="comment">#读出一帧图片，将图片按下述步骤处理得到长宽比，然后不停循环</span></span><br></pre></td></tr></table></figure><ol start="2"><li>找出每一帧图片中的人脸</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)<span class="comment">#灰度化</span></span><br><span class="line">rects = dlib.get_frontal_face_detector(gray, <span class="number">0</span>)<span class="comment">#通过dectetor自带的函数得到图片脸部</span></span><br></pre></td></tr></table></figure><ol start="3"><li>将每一张人脸特征点化，并将特征点转换为numpy矩阵，求得眼睛的坐标索引</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">predictor = dlib.shape_predictor(<span class="string">'test.dat'</span>)<span class="comment">#这是设置提取脸部特征点的函数，test.dat是官方提供的训练好的模型</span></span><br><span class="line">shape = predictor(gray, rect)<span class="comment">#将脸部特征点化</span></span><br><span class="line">shape = face_utils.shape_to_np(shape)<span class="comment">#将特征点转化为numpy矩阵</span></span><br></pre></td></tr></table></figure><ol start="4"><li>得到特征点中眼部的索引，并从矩阵中提取出来，作为下述计算长宽比函数的参数</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(lStart, lEnd) = face_utils.FACIAL_LANDMARKS_IDXS[<span class="string">"left_eye"</span>]<span class="comment">#获得左眼的索引</span></span><br><span class="line">(rStart, rEnd) = face_utils.FACIAL_LANDMARKS_IDXS[<span class="string">"right_eye"</span>]<span class="comment">#获得右眼的索引</span></span><br><span class="line">leftEye = shape[lStart:lEnd]</span><br><span class="line">rightEye = shape[rStart:rEnd]</span><br></pre></td></tr></table></figure><ol start="5"><li>求出眼睛长宽比。先定义求值函数，再将3中得到的leftEye和rightEye作为参数传入</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">eyeAspectRatio</span><span class="params">(eye)</span>:</span><span class="comment">#计算两眼的长度和宽度，并算出长宽比</span></span><br><span class="line">length_A = dist.euclidean(eye[<span class="number">1</span>], eye[<span class="number">5</span>])</span><br><span class="line">length_B = dist.euclidean(eye[<span class="number">2</span>], eye[<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">length_C = dist.euclidean(eye[<span class="number">0</span>], eye[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">ratio = (length_A+length_B)/(<span class="number">2.0</span>*length_C)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ratio</span><br></pre></td></tr></table></figure><ol start="6"><li>比较长宽比，如果长宽比小于阈值，则计数+1，当计数值大于一个数时。则表示疲劳显示出警告</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ear &lt; EYE_AR_THRESH:</span><br><span class="line">    COUNTER += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> COUNTER &gt;= EYE_AR_CONSEC_FRAMES:</span><br><span class="line">        print(<span class="string">"疲劳!!!!!"</span>);</span><br><span class="line">    COUNTER = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.pyimagesearch.com/2017/05/08/drowsiness-detection-opencv/" target="_blank" rel="noopener">https://www.pyimagesearch.com/2017/05/08/drowsiness-detection-opencv/</a></p><hr><p>转载自：<a href="https://www.xsegment.cn/2018/05/31/%E5%9F%BA%E4%BA%8E%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%9A%84%E7%96%B2%E5%8A%B3%E9%A9%BE%E9%A9%B6%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F/" target="_blank" rel="noopener">https://www.xsegment.cn/2018/05/31/%E5%9F%BA%E4%BA%8E%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%9A%84%E7%96%B2%E5%8A%B3%E9%A9%BE%E9%A9%B6%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;p&gt;通过识别驾驶员的面部信息来判断驾驶员是否疲劳驾驶&lt;/p&gt;
&lt;h2 id=&quot;实现思路&quot;&gt;&lt;a href=&quot;#实现思路&quot; class=&quot;head
      
    
    </summary>
    
      <category term="项目" scheme="http://yoursite.com/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="OpenCV" scheme="http://yoursite.com/tags/OpenCV/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>发文测试</title>
    <link href="http://yoursite.com/2018/06/03/my-first-article/"/>
    <id>http://yoursite.com/2018/06/03/my-first-article/</id>
    <published>2018-06-03T08:22:29.000Z</published>
    <updated>2018-06-06T03:52:21.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">请输入密码</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="杂项" scheme="http://yoursite.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="发文尝试" scheme="http://yoursite.com/tags/%E5%8F%91%E6%96%87%E5%B0%9D%E8%AF%95/"/>
    
  </entry>
  
</feed>
